/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.8
 * Generated at: 2018-07-13 05:51:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Registration_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"register.css\">\n");
      out.write("    <script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("    var validEmail = function(value){\n");
      out.write("      // var email = document.myForm.emailId.value;\n");
      out.write("      var email = value;\n");
      out.write("      var emailRegEx = /^[a-zA-Z]+[a-zA-Z0-9._]+@[a-z]+\\.[a-z.]{2,5}$/;\n");
      out.write("      var emailMessage = document.getElementById(\"email\");\n");
      out.write("          if(emailRegEx.test(email)==false){\n");
      out.write("            emailMessage.innerHTML = \"*Invalid mail id\";\n");
      out.write("          }else{\n");
      out.write("            console.log(true);\n");
      out.write("            emailMessage.innerHTML = \"\";\n");
      out.write("          }\n");
      out.write("\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    var validPassword = function(value){\n");
      out.write("    var password = value;\n");
      out.write("    var passwordMessage = document.getElementById(\"password\");\n");
      out.write("    if(password.length < 3){\n");
      out.write("    passwordMessage.innerHTML = \"*Password should contain atleast 4 characters\";\n");
      out.write("    }else{\n");
      out.write("    console.log(true);\n");
      out.write("    passwordMessage.innerHTML = \"\";\n");
      out.write("    }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("  var validUserName = function(value){\n");
      out.write("\n");
      out.write("    var userName = value;\n");
      out.write("    var userNameMessage = document.getElementById(\"username\");\n");
      out.write("    if(userName.length < 4){\n");
      out.write("    userNameMessage.innerHTML = \"*username must contain more then 3 characters\";\n");
      out.write("    }else{\n");
      out.write("    console.log(true);\n");
      out.write("    userNameMessage.innerHTML = \"\";\n");
      out.write("    }\n");
      out.write("\n");
      out.write("  }\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    var validation = function() {\n");
      out.write("\n");
      out.write("            var userName = document.registerForm.userName.value;\n");
      out.write("            var pass1 = document.registerForm.pass1.value;\n");
      out.write("            var pass2 = document.registerForm.pass2.value;\n");
      out.write("            var email = document.registerForm.emailId.value;\n");
      out.write("            console.log(email);\n");
      out.write("            var emailRegEx = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n");
      out.write("            if (userName.length > 3 && pass1 === pass2 && emailRegEx.test(email)) {\n");
      out.write("\n");
      out.write("                return true;\n");
      out.write("\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            if (userName.length < 4) {\n");
      out.write("                document.getElementById(\"username\").innerHTML = \"username must contain more then 3 characters\";\n");
      out.write("            }\n");
      out.write("            if (pass1 != pass2) {\n");
      out.write("                document.getElementById(\"password\").innerHTML = \"password doesn't matches plz enter again\";\n");
      out.write("            }\n");
      out.write("            if (!emailRegEx.test(email)) {\n");
      out.write("                document.getElementById(\"email\").innerHTML = \"invalid email entered\";\n");
      out.write("            }\n");
      out.write("            console.log(false);\n");
      out.write("            return false;\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

  HttpSession session1 = request.getSession(false);
String warning="";
if(session1.getAttribute("warning")!=null){
 warning = (String)session1.getAttribute("warning");
	session.setAttribute("warning", null);
} 


      out.write("\n");
      out.write("\n");
      out.write("<div class=\"tableDiv\">\n");
      out.write("        <form action=\"registerUser\" method=\"post\" name=\"registerForm\" onsubmit=\"return validation()\">\n");
      out.write("            <table class=\"loginTabel\">\n");
      out.write("      \n");
      out.write("               <tr>\n");
      out.write(" \t \t\t<td colspan=\"2\"><span style=\"color:red;font-size: 15px;padding-left:100px;\"> ");
      out.print( warning );
      out.write(" </span></td>\n");
      out.write("   \t\t\t\t</tr>\n");
      out.write("            \n");
      out.write("                <tr>\n");
      out.write("\n");
      out.write("                    <td> UserName:- </td>\n");
      out.write("                    <td> <input type=\"text\" name=\"userName\" required onchange=\"validUserName(this.value)\"> </td>\n");
      out.write("                </tr>\n");
      out.write("\n");
      out.write("                <tr>\n");
      out.write("\n");
      out.write("                    <td colspan=\"2\"> <span id=\"username\" class=\"message\"></span> </td>\n");
      out.write("\n");
      out.write("                </tr>\n");
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                    <td> FullName:- </td>\n");
      out.write("                    <td> <input type=\"text\" name=\"fullName\" required > </td>\n");
      out.write("                </tr>\n");
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                    <td colspan=\"2\"> <span id=\"fullNameMessage\">  </span> </td>\n");
      out.write("                </tr>\n");
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                    <td> Email:- </td>\n");
      out.write("                    <td> <input type=\"text\" name=\"emailId\" required onchange=\"validEmail(this.value)\"> </td>\n");
      out.write("                </tr>\n");
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                    <td colspan=\"2\"><span id=\"email\" class=\"message\"></span></td>\n");
      out.write("                </tr>\n");
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                    <td> Password:- </td>\n");
      out.write("                    <td> <input type=\"password\" name=\"pass1\" required onchange=\"validPassword(this.value)\"> </td>\n");
      out.write("                </tr>\n");
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                    <td colspan=\"2\"> <span id=\"password\" class=\"message\"></span> </td>\n");
      out.write("                </tr>\n");
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                    <td> Retype-Password:- </td>\n");
      out.write("                    <td> <input type=\"password\" name=\"pass2\" required> </td>\n");
      out.write("                </tr>\n");
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                    <td colspan=\"2\"> <input type=\"submit\" value=\"register\"> </td>\n");
      out.write("                </tr>\n");
      out.write("\n");
      out.write("            </table>\n");
      out.write("\n");
      out.write("        </form>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("</body>      \n");
      out.write("   \n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
