/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.8
 * Generated at: 2018-07-13 04:43:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.bridgeIt.model.User;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.bridgeIt.model.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("  \n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"index.css\"/>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("\n");
      out.write("var validEmail = function(value){\n");
      out.write("    // var email = document.myForm.emailId.value;\n");
      out.write("    var email = value;\n");
      out.write("    var emailRegEx = /^[a-zA-Z]+[a-zA-Z0-9._]+@[a-z]+\\.[a-z.]{2,5}$/;\n");
      out.write("    var emailMessage = document.getElementById(\"emailMsg\");\n");
      out.write("        if(emailRegEx.test(email)==false){\n");
      out.write("          emailMessage.innerHTML = \"*Invalid mail id\";\n");
      out.write("        }else{\n");
      out.write("          console.log(true);\n");
      out.write("          emailMessage.innerHTML = \"\";\n");
      out.write("        }\n");
      out.write("\n");
      out.write("  }\n");
      out.write("\n");
      out.write("  var validPassword = function(value){\n");
      out.write("  var password= value;\n");
      out.write("  var passwordMessage = document.getElementById(\"passwordMsg\");\n");
      out.write("  if(password.length < 3){\n");
      out.write("  passwordMessage.innerHTML = \"*Password should contain atleast 4 characters\";\n");
      out.write("  }else{\n");
      out.write("  console.log(true);\n");
      out.write("  passwordMessage.innerHTML = \"\";\n");
      out.write("  }\n");
      out.write("  }\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("var validation = function() {\n");
      out.write("    var email = document.myForm.emailId.value;\n");
      out.write("    var password = document.myForm.password.value;\n");
      out.write("    var emailMessage = document.getElementById(\"emailMsg\");\n");
      out.write("    var passwordMessage = document.getElementById(\"passwordMsg\");\n");
      out.write("   // console.log(email + \" \" + password);\n");
      out.write("    //var emailRegEx = new RegExp(\"^[a-zA-z0-9,+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\");\n");
      out.write("    //var emailRegEx = new RegExp( \"/^[^\\s@_]+[^\\s]+@[^\\s@]+\\.[^\\s@]{2,}$/\"); \n");
      out.write("      var emailRegEx = /^[a-zA-Z]+[a-zA-Z0-9._]+@[a-z]+\\.[a-z.]{2,5}$/;\n");
      out.write("\n");
      out.write("\n");
      out.write("    if (emailRegEx.test(email) && password.length > 3) {\n");
      out.write("    \t console.log(email + \" \" + password);\n");
      out.write("        return true;\n");
      out.write("\n");
      out.write("    } else if (emailRegEx.test(email) == false) {\n");
      out.write("        // alert(\"email id or password is incorrect\");\n");
      out.write("        emailMessage.innerHTML = \"*Invalid mail id\";\n");
      out.write("        return false;\n");
      out.write("    } else if (password.length < 4) {\n");
      out.write("\n");
      out.write("        passwordMessage.innerHTML = \"*Password should contain atleast 4 characters\";\n");
      out.write("        return false;\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
 

response.setContentType("text/html");
User user = (User)session.getAttribute("user");
 if (user!=null){
	
	 request.getRequestDispatcher("UserHome.jsp").forward(request, response);
}

 String warning = "";

 if(request.getAttribute("warning")!=null){
	 warning=(String)request.getAttribute("warning");
	 
 }


      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"tableDiv\">\n");
      out.write("  \t<h3 class =\"heading\" > User LogIn </h3>\n");
      out.write("\t<form action=\"login\" method=\"post\" name=\"myForm\" onsubmit=\"return validation()\">\n");
      out.write("          <table class=\"loginTabel\">\n");
      out.write("               \n");
      out.write("         \t  <tr>\n");
      out.write(" \t \t\t<td colspan=\"2\"><span style=\"color:red;font-size: 15px;padding-left:100px;\"> ");
      out.print( warning );
      out.write(" </span></td>\n");
      out.write("   \t\t\t\t</tr>\n");
      out.write("             \t<tr>\n");
      out.write("                    <td> Email id:- </td>\n");
      out.write("                    <td> <input type=\"email\" name=\"emailId\" required onchange=\"validEmail(this.value)\"/></td>\n");
      out.write("                </tr>\n");
      out.write("                <tr>\n");
      out.write("                    <td></td>\n");
      out.write("                    <td colspan=\"2\" ><span id=\"emailMsg\"></span></td>\n");
      out.write("                </tr>\n");
      out.write("                <tr>\n");
      out.write("                    <td>Password :- </td>\n");
      out.write("                    <td> <input type=\"password\" name=\"password\" required onchange=\"validPassword(this.value)\"/> </td>\n");
      out.write("                </tr>\n");
      out.write("                <tr>\n");
      out.write("               \n");
      out.write("                    <td colspan=\"2\"><span id=\"passwordMsg\"></span></td>\n");
      out.write("                </tr>\n");
      out.write("                <tr>\n");
      out.write("                    <td colspan=\"2\" class=\"submitButton\"> <input class=\"btn\" type=\"submit\" value=\"login \" /></td>\n");
      out.write("                </tr>\n");
      out.write("                <tr>\n");
      out.write("                    <td colspan=\"2\" class=\"register\"><a href=\"Registration.jsp\">Register</a></td>\n");
      out.write("                </tr>\n");
      out.write("\n");
      out.write("            </table>\n");
      out.write("</form>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
